AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  japanese-domain

  Everything related to japanese in the cloud

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20

Resources:
  JapaneseAnalyzer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: JapaneseAnalyzer
      Handler: io.github.myin142.nihon.AnalyzerMain::handleRequest
      Runtime: java11
      MemorySize: 512
  RadicalSearchTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: kanji-radicals
      AttributeDefinitions:
        - AttributeName: radical
          AttributeType: S
        - AttributeName: kanji
          AttributeType: S
      KeySchema:
        - AttributeName: radical
          KeyType: HASH
        - AttributeName: kanji
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # User Pool
  JapaneseGlobalUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
  JapaneseGlobalUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref JapaneseGlobalUserPool
      AllowedOAuthFlowsUserPoolClient: true
      SupportedIdentityProviders:
        - COGNITO
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
      CallbackURLs:
        - http://localhost:8080/login/oauth2
        - https://myin142.github.io/login/oauth2
  JapaneseGlobalUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: japanese-domain
      UserPoolId: !Ref JapaneseGlobalUserPool

  # Identity Pool
  JapaneseGlobalIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId: !Ref JapaneseGlobalUserPoolClient
          ProviderName: !GetAtt JapaneseGlobalUserPool.ProviderName
  JapaneseGlobalUnauthenticatedUserRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref JapaneseGlobalIdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": unauthenticated
      Policies:
        - PolicyName: "JapaneseGlobalUnauthenticatedUserPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:Query"
                Resource: !GetAtt RadicalSearchTable.Arn
  JapaneseGlobalIdentityPoolRoleMapping:
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    Properties:
      IdentityPoolId: !Ref JapaneseGlobalIdentityPool
      Roles:
        unauthenticated: !GetAtt JapaneseGlobalUnauthenticatedUserRole.Arn

Outputs:
  IdentityPoolId:
    Value: !Ref JapaneseGlobalIdentityPool
